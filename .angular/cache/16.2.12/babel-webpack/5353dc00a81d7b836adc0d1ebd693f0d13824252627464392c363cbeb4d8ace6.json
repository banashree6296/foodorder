{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AdminComponent = class AdminComponent {\n  constructor(fApiService, fBuilder) {\n    this.fApiService = fApiService;\n    this.fBuilder = fBuilder;\n    this.foodItems = [];\n    this.foodObject = [];\n    this.myFood = this.fBuilder.group({\n      food_name: [''],\n      food_desc: [''],\n      food_price: [''],\n      food_image: []\n    });\n  }\n  ngOnInit() {\n    //call get all foods items\n    this.getAllFood();\n  }\n  // set image file\n  setFile(Event) {\n    let file = Event.target.files[0];\n    console.log(file);\n    // set file into myfood\n    this.myFood.get('food_image')?.setValue(file);\n  }\n  // get all foods items\n  getAllFood() {\n    this.fApiService.getAllFoods().subscribe({\n      next: res => {\n        // console.log(res);\n        this.foodItems = res;\n        console.log(this.foodItems);\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  // add new food Items\n  addFood() {\n    // console.log(this.myFood.value);\n    let foodFormData = new FormData();\n    let formData = this.myFood.value;\n    // foodFormData.append('food_name',this.myFood.get('food_name')?.value);\n    // foodFormData.append('food_desc',this.myFood.get('food_desc')?.value);\n    // foodFormData.append('food_price',this.myFood.get('food_price')?.value);\n    // foodFormData.append('food_image',this.myFood.get('food_image')?.value);\n    Object.keys(formData).forEach(keys => {\n      foodFormData.append(keys, formData[keys]);\n    });\n    // console.log(foodFormData);\n    // add food api call\n    this.fApiService.addNewFood(foodFormData).subscribe({\n      next: res => {\n        console.log(res);\n        alert(res.message);\n        // get all food\n        this.getAllFood();\n        // Form reset\n        this.myFood.reset();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  //set value myFood\n  myFoodSet(f) {\n    console.log(f);\n    this.foodObject = f;\n    // now setting up the value into myfood form\n    this.myFood.get('food_name')?.setValue(this.foodObject.food_name);\n    this.myFood.get('food_desc')?.setValue(this.foodObject.food_desc);\n    this.myFood.get('food_price')?.setValue(this.foodObject.food_price);\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);","map":{"version":3,"names":["Component","AdminComponent","constructor","fApiService","fBuilder","foodItems","foodObject","myFood","group","food_name","food_desc","food_price","food_image","ngOnInit","getAllFood","setFile","Event","file","target","files","console","log","get","setValue","getAllFoods","subscribe","next","res","error","addFood","foodFormData","FormData","formData","value","Object","keys","forEach","append","addNewFood","alert","message","reset","myFoodSet","f","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\User\\OneDrive\\Desktop\\Angular\\Bong_Thali_2024\\src\\app\\pages\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FOOD } from 'src/app/core/Models/food';\nimport { FoodApiService } from 'src/app/core/services/food/food-api.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit{\n  foodItems:FOOD[]=[];\n  myFood:FormGroup;\n  foodObject:any=[];\n  constructor(private fApiService:FoodApiService,private fBuilder:FormBuilder){\n    this.myFood=this.fBuilder.group({\n      food_name:[''],\n      food_desc:[''],\n      food_price:[''],\n      food_image:[]\n    })\n  }\n  ngOnInit(): void {\n    //call get all foods items\n    this.getAllFood();\n  }\n  // set image file\n  setFile(Event:any){\n    let file=Event.target.files[0];\n    console.log(file);\n    // set file into myfood\n    this.myFood.get('food_image')?.setValue(file);\n\n  }\n  // get all foods items\n  getAllFood(){\n    this.fApiService.getAllFoods().subscribe({\n      next:((res:any)=>{\n        // console.log(res);\n        this.foodItems=res;\n        console.log(this.foodItems);\n      }),\n      error:((error)=>{\n        console.log(error);\n      })\n    })\n  }\n  // add new food Items\n  addFood(){\n    // console.log(this.myFood.value);\n    let foodFormData=new FormData();\n    let formData=this.myFood.value;\n    // foodFormData.append('food_name',this.myFood.get('food_name')?.value);\n    // foodFormData.append('food_desc',this.myFood.get('food_desc')?.value);\n    // foodFormData.append('food_price',this.myFood.get('food_price')?.value);\n    // foodFormData.append('food_image',this.myFood.get('food_image')?.value);\n    Object.keys(formData).forEach((keys:any)=>{\n      foodFormData.append(keys,formData[keys])\n    });\n    // console.log(foodFormData);\n    // add food api call\n    this.fApiService.addNewFood(foodFormData).subscribe({\n      next:((res:any)=>{\n        console.log(res);\n        alert(res.message);\n        // get all food\n        this.getAllFood();\n        // Form reset\n        this.myFood.reset();\n      }),\n      error:((error)=>{\n        console.log(error);\n      })\n    });\n  }\n//set value myFood\n  myFoodSet(f:any){\n    console.log(f);\n    this.foodObject=f;\n    // now setting up the value into myfood form\n    this.myFood.get('food_name')?.setValue(this.foodObject.food_name);\n    this.myFood.get('food_desc')?.setValue(this.foodObject.food_desc);\n    this.myFood.get('food_price')?.setValue(this.foodObject.food_price);\n    \n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}